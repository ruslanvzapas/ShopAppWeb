@using ShopAppWebUI.Models;
@using ShopAppWebUI.Models.DTOs;

@model ProductDisplayModel
@{
}

<div>
    <section id="hero">
        <img src="~/images/hero-img1.png" alt="Background Image">
        <div class="hero-content">
            <h3 style="color: #FAFAFA">Khmelnytskyi Vibes</h3>
            <p style="color: #FAFAFA">Experience the unique charm of Khmelnytskyi with our handcrafted Lightroom preset collections</p>
            <button class="button custom-hero-button">Shop Now</button>
        </div>
    </section>
</div>



<section id="product1">
    <h2>Featured Products</h2>
    <p>Take your photography to the next level with Ruslan's bestselling Lightroom presets collections.</p>

    <div class="my-2">
        <form>
            <div class="search-part">

                <label class="visually-hidden" for="sterm">Search by title</label>
                <div class="input-group search-box">
                    <input type="text" class="form-control custom-search-input" value="@Model.STerm" id="sterm" name="sterm" placeholder="Search by title">

                    <div class="buttons-box">

                        <button type="submit" class="btn btn-primary custom-search-button">
                            <span class="material-symbols-outlined">
                                search
                            </span>
                        </button>


                        <button type="button" class="btn btn-dark custom-reset-button" id="toggleButton">
                            <span class="material-symbols-outlined">
                                tune
                            </span>
                        </button>

                    </div>

                </div>

            </div>
            <div class="filter-box" id="filterBox">
                <div class="button-box">
                    <button type="button" class="btn btn-dark custom-reset-button" onclick="window.location.href='/Home/Index'">
                        <span class="material-symbols-outlined">
                            restart_alt
                        </span>
                    </button>
                </div>
                <div class="col-12">
                    <label class="visually-hidden" for="collectionId">Collections</label>
                    <select class="form-select" id="collectionId" name="collectionId">
                        <option selected>Choose...</option>
                        @foreach (var collection in Model.Collections)
                        {
                            <option value="@collection.Id">@collection.CollectionName</option>
                        }
                    </select>
                </div>
                <div class="number-box">
                    <div class="input-container">
                        <label class="visually-hidden" for="minPrice">Min Price</label>
                        <input type="number" class="form-control" id="minPrice" name="minPrice" placeholder="Min Price" step="0.01" value="@Model.MinPrice">
                    </div>
                    <div class="input-container">
                        <label class="visually-hidden" for="maxPrice">Max Price</label>
                        <input type="number" class="form-control" id="maxPrice" name="maxPrice" placeholder="Max Price" step="0.01" value="@Model.MaxPrice">
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="pro-container">
    @foreach (var product in Model.Products)
    {
        <div class="pro">
            @if (string.IsNullOrEmpty(product.Image))
            {
                    <img src="https://i.ibb.co/zstsPZP/Heritage-B-W.jpg" alt="">
            }
            else
            {
                <img src="@product.Image" alt="">
            }
            <div class="des">
                <h5>@product.Collection</h5>
                <h5>@product.ProductName</h5>
                <h4>$@product.Price</h4>
            </div>
                @if (product.Quantity > 0)
                {
                    <button type="button" onclick="add(@product.Id)" class="cart"><i class="bi bi-bag"></i></button>
                }
                else
                {
                    <span style="border: 1px solid;padding: 5px 8px;color: red;border-radius: 5px;">Out of stock</span>
                }
                
        </div>
        
    }
</div>   
</section>



@section Scripts{
    <script>
        async function add(productId) {
            try {
                var response = await fetch(`/Cart/AddItem?productId=${productId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            } catch (err) {
                console.log(err);
            }
        }
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var toggleButton = document.getElementById('toggleButton');
            var filterBox = document.getElementById('filterBox');


            toggleButton.addEventListener('click', function () {
                // Переключаємо клас 'show' у блока з фільтром
                filterBox.classList.toggle('show');
            });
        });
    </script>
}
